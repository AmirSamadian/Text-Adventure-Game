///////////////////////////////////////////////////////////////////////////////
// Original commands from the game (alphabetical)

GO Scenario #1: No direction specified
   GIVEN : "go" is entered 
    WHEN : 
    THEN : appropriate message is displayed

GO Scenario #2: No exit exists
   GIVEN : "go direction" is entered 
    WHEN : there is no exit in the given direction
    THEN : appropriate message is displayed (no door)

GO Scenario #3: Exit exists
   GIVEN : "go direction" is entered
    WHEN : there is an exit in the given direction
    THEN : player's current room is changed to the room in the given direction
     and : the current room's points are added to the player's score
     and : player's current location is displayed

HELP Scenario #1:
   GIVEN : "help" is entered
    WHEN : 
    THEN : available commands are displayed

SCORE Scenario #1:
   GIVEN : "score" is entered
    WHEN : 
    THEN : player's current score is displayed

TURNS Scenario #1:
   GIVEN : "turns" is entered
    WHEN : 
    THEN : current number of turns is displayed to the screen

QUIT Scenario #1:
   GIVEN : "quit" is entered
    WHEN : 
    THEN : appropriate message is displayed (thanks for playing)
     and : program quits



///////////////////////////////////////////////////////////////////////////////
// Commands added in Stage 2 (alphabetical)

BACK Scenario #1: no previous room
   GIVEN : "back" is entered
    WHEN : there is no previous room
    THEN : appropriate message is displayed (cannot go back)

BACK Scenario #2: there is a previous room
   GIVEN : "back" is entered
    WHEN : there is a previous room
    THEN : player's current location is changed to the previous location
     and : player's current location is displayed 

LOOK Scenario #1:
   GIVEN : "look" is entered
    WHEN : 
    THEN : player's current location is displayed

STATUS Scenario #1:
   GIVEN : "status" is entered
    WHEN : 
    THEN : current number of turns is displayed 
     and : player's current score is displayed
     and : player's current location is displayed




///////////////////////////////////////////////////////////////////////////////
// Commands added in Stage 3 (alphabetical)

DROP Scenario #1: No item specified
   GIVEN : "drop" is entered
    WHEN : 
    THEN : appropriate message is displayed (which item?)

DROP Scenario #2: Player does not have the specified item
   GIVEN : "drop item" is entered
    WHEN : player does not have the specified item
    THEN : appropriate message is displayed (you don't have it)

DROP Scenario #3: Player has the specified item
   GIVEN : "drop item" is entered
    WHEN : player has the specified item
    THEN : "item" is removed from the player's inventory
     and : "item" is added to the current room
     and : appropriate message is displayed (you dropped the item)



EXAMINE Scenario #1: No item specified
   GIVEN : "examine" is entered
    WHEN : 
    THEN : appropriate message is displayed (which item?)

EXAMINE Scenario #2: Specified item does not exist
   GIVEN : "examine item" is entered
    WHEN : specified item is not in the room
     and : specified item is not in player's inventory
    THEN : appropriate message is displayed (no such item)

EXAMINE Scenario #3: Specified item does exist
   GIVEN : "examine item" is entered
    WHEN : specified item is in the room or in the player's inventory
    THEN : complete description of the item is displayed including the item's name, description and (optionally) the weight.



INVENTORY Scenario #1:
   GIVEN : "inventory" is entered
    WHEN : 
    THEN : a list of the items in the players inventory is displayed



TAKE Scenario #1: no item specified
   GIVEN : "take" is entered
    WHEN : 
    THEN : appropriate message is displayed (take what?)

TAKE Scenario #2: specified item does not exist
   GIVEN : "take item" is entered
    WHEN : specified item is not in the current room
    THEN : appropriate message is displayed (no such item)
    
TAKE Scenario #3: specified item is too heavy to lift
   GIVEN : "take item" is entered
    WHEN : specified item is in the current room
     and : specified item by itself exceeds maximum carrying weight
    THEN : appropriate message is displayed (too heavy to lift)

TAKE Scenario #4: specified item makes inventory too heavy
   GIVEN : "take item" is entered
    WHEN : specified item is in the current room
     and : adding specified item to inventory weight exceeds maximum carrying weight
    THEN : appropriate message is displayed (carrying too much)

TAKE Scenario #5: specified item is taken
   GIVEN : "take item" is entered
    WHEN : specified item is in the current room
     and : adding specified item to inventory weight does not exceed maximum carrying weight
    THEN : item is removed from the current room
     and : item is added to the player's inventory
     and : appropriate message is displayed (you took the item)




///////////////////////////////////////////////////////////////////////////////
// Commands added in Stage 4 (alphabetical)

GO Scenario #4: Door is locked
   GIVEN : "go direction" is entered
    WHEN : there is an exit in the given direction
     and : that exit is locked
    THEN : appropriate message is displayed (door is locked)

Lock north
Unlock north 


LOCK Scenario #1: No direction specified
   GIVEN : "lock" is entered
    WHEN : 
    THEN : appropriate message is displayed (lock what?)

LOCK Scenario #2: No Door
   GIVEN : "lock direction" is entered
    WHEN : there is no door in that direction
    THEN : appropriate message is displayed (no door)

LOCK Scenario #3: Door is locked
   GIVEN : "lock direction" is entered
    WHEN : door in "direction" is locked
    THEN : appropriate message is displayed (door is already locked)

LOCK Scenario #4: Door cannot be locked
   GIVEN : "lock direction" is entered
    WHEN : door in "direction" has no associated key
    THEN : appropriate message is displayed (door cannot be locked)

LOCK Scenario #5: Door can be locked
   GIVEN : "lock direction" is entered
    WHEN : door in "direction" is unlocked
     and : door in "direction" can be locked
    THEN : user is prompted for key

LOCK Scenario #6: Player does not have the key
   GIVEN : "lock direction" had been entered
     and : user has been prompted for specific key
    WHEN : player does not have specific key in inventory
    THEN : appropriate message is displayed (you do not have it)

LOCK Scenario #7: Incorrect key specified
   GIVEN : "lock direction" had been entered
     and : user has been prompted for specific key
    WHEN : player's inventory has the specific key
     and : specified key is not the correct key
    THEN : appropriate message is displayed (wrong key)
 
LOCK Scenario #8: Correct key specified
   GIVEN : "lock direction" had been entered
     and : user has been prompted for specific key
    WHEN : player's inventory has the specific key
     and : specified key is the correct key
    THEN : door in "direction" is locked
     and : appropriate message is displayed (you locked it)
 

pack key
What container should we pack this in?

PACK Scenario #1: No item specified
   GIVEN : "pack" is entered
    WHEN : 
    THEN : appropriate message is displayed (pack what?)

PACK Scenario #2: Item is not available
   GIVEN : "pack item" is entered
    WHEN : item is NOT in the current room
     and : item is NOT in the players inventory
    THEN : appropriate message is displayed (you don't have it)

PACK Scenario #3: Item is too heavy
   GIVEN : "pack item" is entered
    WHEN : item is in the current room
     and : item is heavier than player's carrying capacity
    THEN : appropriate message is displayed (too heavy)

PACK Scenario #4: Item is available
   GIVEN : "pack item" is entered
    WHEN : item is in the current room
      or : item is in the player's inventory
     and : there are no weight problems
    THEN : user is prompted for the container to put it in

PACK Scenario #5: Container is not available
   GIVEN : "pack item" had been entered
     and : user has been prompted for the container
    WHEN : container is NOT in the current room
     and : container is NOT in the player's inventory
    THEN : appropriate message is displayed (you don't see the container)

PACK Scenario #6: Container is NOT a container 
   GIVEN : "pack item" had been entered
     and : user has been prompted for the container
    WHEN : container is in the current room
      or : container is in the player's inventory
     and : container is not really a container
    THEN : appropriate message is displayed (that's not a container)

PACK Scenario #7: Container is a container, but item too heavy
   GIVEN : "pack item" had been entered
     and : user has been prompted for the container
    WHEN : item is in the current room
     and : container is in the player's inventory
     and : item would put player over their inventory weight limit
    THEN : appropriate message is displayed (carrying too much)

PACK Scenario #8: Packing is possible
   GIVEN : "pack item" had been entered
     and : user has been prompted for the container
    WHEN : container is in the current room
      or : container is in the player's inventory
     and : container is really a container
     and : there are no weight problems
    THEN : item is removed from the current room
      or : item is removed from the player's inventory
     and : item is added to the container
     and : appropriate message is displayed (you packed it)





UNLOCK Scenario #1: No direction specified
   GIVEN : "unlock" is entered
    WHEN : 
    THEN : appropriate message is displayed (unlock what?)

UNLOCK Scenario #2: No door in that direction
   GIVEN : "unlock direction" is entered
    WHEN : there is no door in the "direction"
    THEN : appropriate message is displayed (there is no door)

UNLOCK Scenario #3: Direction is specified and is not locked
   GIVEN : "unlock direction" is entered
    WHEN : there is a door in the "direction"
     and : door in "direction" is NOT locked
    THEN : appropriate message is displayed (door is not locked)

UNLOCK Scenario #4: Direction is specified and is locked
   GIVEN : "unlock direction" is entered
    WHEN : there is a door in the "direction"
     and : door in "direction" is locked
    THEN : user is prompted for key

UNLOCK Scenario #5: Player missing specified key
   GIVEN : "unlock direction" had been entered
     and : user has been prompted for specific key
    WHEN : player's inventory does NOT have the specific key
    THEN : appropriate message is displayed (you don't have it)

UNLOCK Scenario #6: Incorrect key
   GIVEN : "unlock direction" had been entered
     and : user has been prompted for specific key
    WHEN : player's inventory has the specific key
     and : specified key is incorrect item
    THEN : appropriate message is displayed (that doesn't fit)

UNLOCK Scenario #7: Correct key
   GIVEN : "unlock direction" had been entered
     and : user has been prompted for specific key
    WHEN : player's inventory has the specific key
     and : specified key is the correct object
    THEN : door in "direction" is unlocked
     and : appropriate message is displayed (you unlocked it)
 




UNPACK Scenario #1: No container specified
   GIVEN : "unpack" is entered
    WHEN : 
    THEN : appropriate message is displayed (unpack what?)

UNPACK Scenario #2: Specified container is not in the current room
   GIVEN : "unpack container" is entered
    WHEN : specified container is NOT in the current room
     and : specified container is NOT in the players inventory
    THEN : appropriate message is displayed (you don't see it)

UNPACK Scenario #3: Specified item is not a container
   GIVEN : "unpack container" is entered
    WHEN : specified container is in the current room
      or : specified container is in the player's inventory
     and : specified container is NOT a container
    THEN : appropriate message is displayed (that's not a container)

UNPACK Scenario #4: Container is OK
   GIVEN : "unpack container" is entered
    WHEN : specified container is in the current room
      or : specified container is in the player's inventory
     and : specified container is a container
    THEN : user is prompted for an item to unpack

UNPACK Scenario #5: Item is NOT in container
   GIVEN : "unpack container" had been entered
     and : user has been prompted for the item to unpack
    WHEN : item to unpack is NOT in the container
    THEN : appropriate message is displayed (you don't find it)

UNPACK Scenario #6: Item is in container but too heavy
   GIVEN : "unpack container" had been entered
     and : user has been prompted for the item to unpack
    WHEN : item to unpack is in the container
     and : container was in the current room
     and : item would make the player exceed his weight limit
    THEN : appropriate message is displayed (you are already carrying too much)

UNPACK Scenario #7: Item can be unpacked
   GIVEN : "unpack container" had been entered
     and : user has been prompted for the item to unpack
    WHEN : item to unpack is in the container
     and : there is no weight problem
    THEN : item to unpack is removed from the container
     and : item to unpack is added to the player's inventory
     and : appropriate message is displayed (you unpack it)


///////////////////////////////////////////////////////////////////////////////
// Commands specific to my game (alphabetical)


ATTACK Scenario #1: Player not in room 35 (mall)
   GIVEN : "attack" is entered
    WHEN : player not in room 35
    THEN : Display Message: "Attack isn't an appropriate command for this room"

ATTACK Scenario #2: Player is in room 35 
   GIVEN : "attack" is entered
    WHEN : player is in room 35
    THEN : Ask Player: "With what?"

ATTACK Scenario #3:  Player enters an item that isn't in their inventory
   GIVEN : "attack" had been entered
     and : user has been prompted
    WHEN : entered item is not in player inventory
     and : player is in room 35
    THEN : Display Message: "You don't have that weapon in your inventory. Maybe you have it packed?"
    
	 
	* Cases that don't succeed *
	 
ATTACK Scenario #4:  Player enters an item that isn't a weapon
   GIVEN : "attack" had been entered
     and : user has been prompted
    WHEN : player enters an item that isn't a weapon as response to prompt
      and: player is in room 35
      and: item is in inventory
    THEN : Display Message: "You ran at the guards like an idiot holding a 'response item' and they killed you."
	 and : set player health to 0 which ends game.	 
 
ATTACK Scenario #5:  Player enters escrima sticks but didn't flash
   GIVEN : "attack" had been entered
     and : user has been prompted
    WHEN : player enters escrima sticks
     and : player is in room 35
     and : item is in inventory
     and : goons haven't been flashed
    THEN : Display Message: "Don't bring a melee weapon to a gunfight unless you have some advantage, detective. 
    						I thought you were a better fighter than this."
	 and : set player health to 0 which ends game.	
	 
ATTACK Scenario #6:  Player enters escrima sticks, flashed, but their inventory weight is more than 15 lbs
   GIVEN : "attack" had been entered
     and : user has been prompted
    WHEN : player enters escrima sticks
     and : player is in room 35
     and : item is in inventory
     and : goons have been flashed
     and : player inventory weight > 15 lbs
    THEN : Display Message: "You can't move as fast as you normally do with all this junk in your inventory you weren't battle ready!"
	 and : set player health to 0 which ends game.	
	 
ATTACK Scenario #7:  Player enters falcones daily but didn't flash
   GIVEN : "attack" had been entered
     and : user has been prompted
    WHEN : player enters falcones daily
     and : player is in room 35
     and : item is in inventory
     and : goons haven't been flashed
    THEN : Display Message: "You let your ego get the best of you, detective. 10 assault rifles always beat a pistol, 
    						unless you have some advantage. I thought you were a better fighter than this."
	 and : set player health to 0 which ends game.	 
	 
ATTACK Scenario #8:  Player enters falcones daily, flashed, but their inventory weight is more than 15lbs
   GIVEN : "attack" had been entered
     and : user has been prompted
    WHEN : player enters falcones daily
     and : player is in room 35
     and : item is in inventory
     and : goons have been flashed
     and : player inventory weight > 15 lbs
    THEN : Display Message: "You can't move as fast as you normally do with all this junk in your inventory you weren't battle ready!"
	 and : set player health to 0 which ends game.	 
	 
ATTACK Scenario #9:  Player enters cr-56 amax
   GIVEN : "attack" had been entered
     and : user has been prompted
    WHEN : player enters cr-56 amax
     and : player is in room 35
     and : item is in inventory
    THEN : Display Message: "Unlucky! your gun jammed and the goons saw you."
	 and : set player health to 0 which ends game.	 	 
	 
	 
	 	* Cases that succeed *
	 	
ATTACK Scenario #10:  Player enters rpg
   GIVEN : "attack" had been entered
     and : user has been prompted
    WHEN : player enters rpg
     and : player is in room 35
     and : item is in inventory
    THEN : Display Message: "BOOOM! Down go the goons. Grab the key from them and unlock the door. "
	 and : create secret key to unlock next room
	 
ATTACK Scenario #11:  Player enters falcones daily, flashed, and their inventory weight is less than 15lbs
   GIVEN : "attack" had been entered
     and : user has been prompted
    WHEN : player enters falcones daily
     and : player is in room 35
     and : item is in inventory
     and : goons have been flashed
     and : inventory weight < 15 lbs
    THEN : Display Message: "You were able to kill all of them with precision aim as they were busy trying to see. Grab the key from them and unlock the door. "
	 and : create secret key to unlock next room
	 
ATTACK Scenario #12:  Player enters escrima sticks, flashed, and their inventory weight is less than 15lbs
   GIVEN : "attack" had been entered
     and : user has been prompted
    WHEN : player enters escrima sticks
     and : player is in room 35
     and : item is in inventory
     and : goons have been flashed
     and : inventory weight < 15 lbs
    THEN : Display Message: "While the goons were struggling to see, you acrobatically jumped towards them. 
    					You used 10 different martial arts techniques to disarm them while smacking the hell 
    					out of them with the escrima sticks. Grab the key from them and unlock the door. "
	 and : create secret key to unlock next room
	 
///

CWEIGHT Scenario #1: No container specified.
   GIVEN : "cweight" is entered
    WHEN : 
    THEN : Display Message: "no second word entered. What container do you want to check the weight for?"

CWEIGHT Scenario #2: container not in room or inventory
   GIVEN : "cweight containerName" is entered
    WHEN : container not in inventory
      or : container not in room
    THEN : Display Message: "You can't see that container. It's not in the room or in your inventory."

CWEIGHT Scenario #2: container is in room or inventory
   GIVEN : "cweight containerName" is entered
    WHEN : container is in inventory
      or : container is in room
    THEN : "the total weight of this container is " + container.getWeight()


///

DEACTIVATE Scenario #1: Player not in room 37
   GIVEN : "deactivate" is entered
    WHEN : Player not in room 37
    THEN : Display Message: "There is nothing to deactivate in this room"
    
DEACTIVATE Scenario #2: Player is in room 37
   GIVEN : "deactivate" is entered
    WHEN : Player is in room 37
    THEN : Ask Player: "Enter the passcode: "

DEACTIVATE Scenario #3: passcode correct
   GIVEN : "deactivate" has been entered
    WHEN : Player is in room 37
      and: Passcode entered was correct
    THEN : Display Message: "You win! Congratulations detective. This becomes case #10,001 completed. You have saved the city from this lunatic!"
      and: printGoodBye

DEACTIVATE Scenario #4: passcode incorrect
   GIVEN : "deactivate" has been entered
    WHEN : Player is in room 37
      and: passcode was NOT correct
    THEN : Ask Player Again: "INCORRECT. Enter the passcode: "

DEACTIVATE Scenario #5: passcode incorrect for the third time
   GIVEN : "deactivate" has been entered
    WHEN : Player is in room 37
      and: passcode was NOT correct for the third time
    THEN : Display Message: "INCORRECT. 3, 2, 1, BEEP BEEP BEEP BOOOM!! The world is doomed."
      and: set player health to 0 which kills him and displays you lose and the goodbye message.

///

ESCAPE Scenario #1: Player not in room 29
   GIVEN : "escape" is entered
    WHEN : Player not in room 29
    THEN : Display Message: "You are free, there's nothing to escape out of."

ESCAPE Scenario #2: Player is in room 29
   GIVEN : "escape" is entered
    WHEN : Player is in room 29
    THEN : Ask Player: "What do you think would be helpful to escape this electric cage? Enter the name of an item in your inventory. Make sure you first unpack any items in containers if you think they are helpful."

ESCAPE Scenario #3: Player prompted for item and enters an unhelpful item (anything other than escrima sticks)
   GIVEN : "escape" had been entered
     and : user has been prompted
    WHEN : Player is in room 29
     and : Player enters an unhelpful item as a response to the prompt.
    THEN : Display Message: "That won't help. Try another item. Remember the cage is electric so something electric would be helpful." 
    
ESCAPE Scenario #4: Player enters escrima sticks but not in inventory.
   GIVEN : "escape" had been entered
     and : user has been prompted
    WHEN : Player is in room 29
      and: Player enters escrima sticks as response to the prompt.
      and: escrima sticks not in inventory. even if it's in a container in inventory.
    THEN : Display Message: "It's not in your inventory. Sorry but you're gonna be stuck here forever and die." 
      and: set player health to 0 which ends the game.
    
ESCAPE Scenario #4: Player enters escrima sticks and it's in inventory.
   GIVEN : "escape" had been entered
     and : user has been prompted
    WHEN : Player is in room 29
      and: Player enters escrima sticks as response to the prompt.
      and: escrima sticks in player inventory.
    THEN : Display Message: "You slammed the escrima sticks into the ground which created an electrical blast that entered the power box of the cage and disabled the electricity allowing you to escape the cage. Look for the key to this abandoned building to go to the mall." 
      and: generate the key that unlocks the door to the next room. The next room was locked this whole time.
    
///

FLASH Scenario #1: Player not in room 35 (mall)
   GIVEN : "flash" is entered
    WHEN : Player not in room 35
    THEN : Display Message: "You shouldn't use a flash grenade here."

FLASH Scenario #2: Flash Grenade not in player inventory
   GIVEN : "flash" is entered
    WHEN : Player is in room 35
      and: flash grenade not in player inventory
    THEN : Display Message: "You don't have a flash grenade in your inventory"

FLASH Scenario #3: Flash Grenade is in player inventory
   GIVEN : "flash" is entered
    WHEN : Player is in room 35
      and: flash grenade is in player inventory
    THEN : Display Message: "You have successfully blinded the group of goons. Take advantage of this and 
    						follow up with an attack using another weapon."
      and: sets hasFlashed boolean from the player class equal to true
      and: remove flash grenade from inventory 

///


SCAN Scenario #1: Scanner not in inventory
   GIVEN : "scan" is entered
    WHEN : scanner item is NOT in player's inventory
      or : scanner in a container in the player's inventory
    THEN : Display Message: "The scanner is not in your inventory. It might be in a container, if so, unpack it."

SCAN Scenario #2: Player not in a correct room
   GIVEN : "scan" is entered
    WHEN : Player's current room is not a correct room (rooms with bodies to scan)
     and : scanner item is in player's inventory
    THEN : Display Message: "There's no dead body in this room for you to scan. You are in the wrong place detective."

SCAN Scenario #3: Scanner can be used
   GIVEN : "scan" is entered
    WHEN : scanner item is in player's inventory
     and : Player in a correct room
    THEN : Scanner hint associated with the body in the player's current room should be displayed.

///

    
SHOOT Scenario #1: Player not in room 34 (mall parking)
   GIVEN : "shoot goons" is entered
       or: "shoot" is entered
    WHEN : player not in room 34
    THEN : Display Message: "The shoot command isn't appropriate for this room."
    
SHOOT Scenario #2: No target specified.
   GIVEN : "shoot" is entered
    WHEN : 
    THEN : Display Message: "Who do you need to shoot?"
    
SHOOT Scenario #3: target specified isn't guards or goons.
   GIVEN : "shoot target" is entered and target isn't the string guards or goons
    WHEN : player in room34
    THEN : Display Message: "We need to shoot the guards idiot"   
 
SHOOT Scenario #4:  Player is in room 34 (mall parking)
   GIVEN : "shoot goons" is entered
    WHEN : player is in room 34
    THEN : Ask Player: "With what weapon?"

SHOOT Scenario #5:  Player enters an item that isn't in their inventory
   GIVEN : "shoot goons" had been entered
     and : user has been prompted
    WHEN : item is not in player inventory
      and: player is in room 34
    THEN : Display Message: "You don't have that weapon in your inventory. Maybe you have it packed?"
    
SHOOT Scenario #6:  Player enters an item that isn't a gun or rpg
   GIVEN : "shoot goons" had been entered
     and : user has been prompted
    WHEN : player enters an item that isn't a gun or rpg as response to prompt
      and: player is in room 34
      and: item is in inventory
    THEN : Display Message: "That's not a long-ranged weapon"
    
SHOOT Scenario #7:  Player enters rpg
   GIVEN : "shoot goons" had been entered
     and : user has been prompted
    WHEN : player enters rpg response to prompt
      and: player is in room 34
      and: rpg is in player inventory
    THEN : add mall key to room 34
      and: Display Message: "You blew those guards up! They are both dead. Go get the key to the mall from their clothes and enter the mall."

SHOOT Scenario #8:  Player enters falcones daily
   GIVEN : "shoot goons" had been entered
     and : user has been prompted
    WHEN : player enters falcones daily as response to prompt
      and: player is in room 34
      and: falcones daily is in player inventory
    THEN : add mall key to room 34
      and: Display Message: "You killed guard 1 and guard 2 was confused as to where he got shot from since falcones daily is a silenced pistol. 
      						By the time he could react, you killed him too. Go get the key to the mall from their clothes and enter the mall."
    
SHOOT Scenario #9:  Player enters cr-56 amax
   GIVEN : "shoot goons" had been entered
     and : user has been prompted
    WHEN : player enters cr-56 amax as response to prompt
      and: player is in room 34
      and: cr-56 amax is in player inventory
    THEN : Display Message: "You were able to kill guard 1 but gave your position away. Guard 2 ran away and called for backup. They sniped you before you could escape."
	  and: set player health to 0 which ends game.
	  
//////	  
    




    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    